var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.VideoUploadButton=exports.buildVideoFileSelector=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));var _react=_interopRequireWildcard(require("react"));var _IconButton=_interopRequireDefault(require("../../IconButton"));var _this=this,_jsxFileName="/Users/kane/Lab/Eros/src/components/Buttons/VideoUploadButton/VideoUploadButton.web.js";var buildVideoFileSelector=function buildVideoFileSelector(){try{var fileSelector=document.createElement('input');fileSelector.setAttribute('type','file');fileSelector.setAttribute('accept','video/*');fileSelector.setAttribute('multiple','multiple');fileSelector.setAttribute('name','UploadVideoInput');fileSelector.setAttribute('capture','environment');return fileSelector;}catch(e){console.log('Must be in a browser');return null;}};exports.buildVideoFileSelector=buildVideoFileSelector;var VideoUploadButton=function VideoUploadButton(_ref){var onFiles=_ref.onFiles,renderPreviews=_ref.renderPreviews,_ref$iconName=_ref.iconName,iconName=_ref$iconName===void 0?null:_ref$iconName,rest=(0,_objectWithoutProperties2.default)(_ref,["onFiles","renderPreviews","iconName"]);var fileSelectorRef=(0,_react.useRef)(null);var onFilesDetected=(0,_react.useCallback)(function(e){e.preventDefault();var filesArray=Array.from(e.target.files);return onFiles(filesArray);},[onFiles]);(0,_react.useEffect)(function(){fileSelectorRef.current=buildVideoFileSelector();fileSelectorRef.current.addEventListener('change',onFilesDetected);return function(){if(fileSelectorRef.current){fileSelectorRef.current.removeEventListener('change',onFilesDetected);fileSelectorRef.current.remove();}};},[onFilesDetected]);var onPress=function onPress(e){e.preventDefault();fileSelectorRef.current.click();};return _react.default.createElement(_IconButton.default,(0,_extends2.default)({name:iconName||'ios-videocam-outline',onPress:onPress},rest,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:65,columnNumber:10}}));};exports.VideoUploadButton=VideoUploadButton;var _default=VideoUploadButton;exports.default=_default;