var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.createClient=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));var _apolloLink=require("apollo-link");var _apolloClient=require("apollo-client");var _apolloCacheInmemory=require("apollo-cache-inmemory");var _apolloLinkWs=require("apollo-link-ws");var _apolloLinkContext=require("apollo-link-context");var _apolloLinkState=require("apollo-link-state");var _apolloUtilities=require("apollo-utilities");var _apolloLinkError=require("apollo-link-error");var _apolloUploadClient=require("apollo-upload-client");var _queries=require("../queries");var _reactNative=require("react-native");var _fns=require("../fns");var _resolvers=_interopRequireDefault(require("./resolvers"));var _constants=require("../constants");var createErrorLink=function createErrorLink(){var errorLink=(0,_apolloLinkError.onError)(function(_ref){var graphQLErrors=_ref.graphQLErrors,networkError=_ref.networkError,response=_ref.response,operation=_ref.operation,forward=_ref.forward;if(graphQLErrors){graphQLErrors.forEach(function(_ref2){var message=_ref2.message;console.log(message);});}});return errorLink;};var createHttpLink=function createHttpLink(_ref3){var _ref3$ssrMode=_ref3.ssrMode,ssrMode=_ref3$ssrMode===void 0?false:_ref3$ssrMode;var options={ssrMode:ssrMode,uri:""+_constants.API_URI};return(0,_apolloUploadClient.createUploadLink)(options);};var createWSLink=function createWSLink(_ref4){var _ref4$ssrMode=_ref4.ssrMode,ssrMode=_ref4$ssrMode===void 0?false:_ref4$ssrMode;return new _apolloLinkWs.WebSocketLink({ssrMode:ssrMode,uri:""+_constants.WS_API_URI,options:{lazy:true,reconnect:true,connectionParams:function connectionParams(){var token;return _regenerator.default.async(function connectionParams$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regenerator.default.awrap(_reactNative.AsyncStorage.getItem('token'));case 3:token=_context.sent;if(!token){_context.next=6;break;}return _context.abrupt("return",{Authorization:token});case 6:return _context.abrupt("return",{});case 9:_context.prev=9;_context.t0=_context["catch"](0);console.log('wsLink error',_context.t0);return _context.abrupt("return",{});case 13:case"end":return _context.stop();}}},null,null,[[0,9]],Promise);}}});};var createNetworkLink=function createNetworkLink(_ref5){var _ref5$ssrMode=_ref5.ssrMode,ssrMode=_ref5$ssrMode===void 0?false:_ref5$ssrMode;if(ssrMode){return createHttpLink({ssrMode:ssrMode});}try{var wsLink=createWSLink({ssrMode:ssrMode});var httpLink=createHttpLink({ssrMode:ssrMode});var link=(0,_apolloLink.split)(function(_ref6){var query=_ref6.query;var _getMainDefinition=(0,_apolloUtilities.getMainDefinition)(query),kind=_getMainDefinition.kind,operation=_getMainDefinition.operation;return kind==='OperationDefinition'&&operation==='subscription';},wsLink,httpLink);return link;}catch(e){console.log('createNetworkLink error',e);throw'Could not create network link';}};var createAuthHeader=function createAuthHeader(_ref7){var _ref7$ssrMode=_ref7.ssrMode,ssrMode=_ref7$ssrMode===void 0?false:_ref7$ssrMode;var authMiddleware=new _apolloLink.ApolloLink(function(operation,forward){var _context$cache,_context$cache$data,_context$cache$data$d,_context$cache$data$d2;var context=operation.getContext();console.log('Me context in createAuthHeader',context);var apolloToken=(context==null?void 0:(_context$cache=context.cache)==null?void 0:(_context$cache$data=_context$cache.data)==null?void 0:(_context$cache$data$d=_context$cache$data.data)==null?void 0:(_context$cache$data$d2=_context$cache$data$d['Me:0'])==null?void 0:_context$cache$data$d2.token)||undefined;var cookieToken=function(){try{var _cookies$token;var cookies=(0,_fns.parseCookie)(document.cookie);console.log('cookies',cookies);return(_cookies$token=cookies==null?void 0:cookies.token)!=null?_cookies$token:undefined;}catch(error){console.error('authMiddleware error');return undefined;}}();console.log('apolloToken',apolloToken);operation.setContext(function(_ref8){var headers=_ref8.headers;return{headers:(0,_extends2.default)({Authorization:apolloToken||cookieToken||undefined},headers)};});return forward(operation);});return authMiddleware;};var createCache=function createCache(_ref9){var _ref9$initialState=_ref9.initialState,initialState=_ref9$initialState===void 0?{}:_ref9$initialState,_ref9$ssrMode=_ref9.ssrMode,ssrMode=_ref9$ssrMode===void 0?false:_ref9$ssrMode,_ref9$account=_ref9.account,account=_ref9$account===void 0?null:_ref9$account;var cache=new _apolloCacheInmemory.InMemoryCache();if(!ssrMode){cache.restore(initialState);return cache;}return cache;};var errorLink=createErrorLink();var createClient=function createClient(_ref10){var _ref10$initialState=_ref10.initialState,initialState=_ref10$initialState===void 0?{}:_ref10$initialState,_ref10$ssrMode=_ref10.ssrMode,ssrMode=_ref10$ssrMode===void 0?false:_ref10$ssrMode,_ref10$account=_ref10.account,account=_ref10$account===void 0?null:_ref10$account,_ref10$deviceType=_ref10.deviceType,deviceType=_ref10$deviceType===void 0?'mobile':_ref10$deviceType,_ref10$token=_ref10.token,token=_ref10$token===void 0?null:_ref10$token;try{var cache=createCache({initialState:initialState,ssrMode:ssrMode,account:account,deviceType:deviceType});var localStateLink=(0,_apolloLinkState.withClientState)((0,_extends2.default)({cache:cache},_resolvers.default));var authHeader=createAuthHeader({ssrMode:ssrMode});var networkLink=createNetworkLink({ssrMode:ssrMode});var link=(0,_apolloLink.from)([errorLink,localStateLink,authHeader,networkLink]);var client=new _apolloClient.ApolloClient({ssrMode:ssrMode,cache:cache,link:link,resolvers:_resolvers.default});console.log('account, token',account,token);if(ssrMode&&account){}else if(ssrMode){console.log('ssrMode without account',account);client.writeQuery({query:_queries.ME,data:{Me:null}});}var unsubscribe=client.onResetStore(localStateLink.writeDefaults);return client;}catch(e){console.log('createApolloClient error',e);throw new Error('Could not connect');}};exports.createClient=createClient;var _default=createClient;exports.default=_default;